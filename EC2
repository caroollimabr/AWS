Acesso EC2 via Putty: https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/putty.html?icmpid=docs_ec2_console
Connection Timed out (Putty): https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/TroubleshootingInstancesConnecting.html#TroubleshootingInstancesConnectionTimeout
AWS CLI Install Windows: https://docs.aws.amazon.com/cli/latest/userguide/install-cliv2-windows.html
AWS CLI commands: https://docs.aws.amazon.com/pt_br/cli/latest/userguide/cli-usage-commandstructure.html


AWS 
IAM - Autenticação Multifator > Ativar MFA > Instalar Google Authenticator no celular > QR Code já vincula ao AWS e mostra o Token: mais segurança nos acessos

EC2 - Elastic Compute Cloud
Cada tipo de instância EC2 tem imagens pré-configuradas (com os softwares pré-instalados e configurados).
IAM - Identity Access Management
Snapshot - backup of an EC2 volume that's stored in S3. You can create a new volume using data stored in a snapshot by entering the snapshot's ID. You can search for public snapshots by typing text in the Snapshot field. Descriptions are case-sensitive.
Key pair - se vc perder o key pair, não vai ter mais acesso à máquina virtual

vm
criar vpc
criar security groups
lançar a instancia NA PORTA CORRETA

terminate protection nas EC2: habilitar para não correr o risco de terminate sem querer

time out via putty? Veja o IP do Security group, precisa estar compatível ao IP da sua máquina

SECURITY GROUPS
acesso-remoto com o seu ip
grupo default: o que estiver na mesma rede pode se comunicar

Para que duas máquinas se comuniquem, colocar o security group acesso-remoto e o default nas duas ou três máquinas

ELASTIC BLOCK STORE: discos relacionados à máquina virtual (continuam em uso mesmo com a máquina parada)

https://calculator.s3.amazonaws.com/index.html - calculadora de preços da Amazon


LANÇANDO MÁQUINA EC2 PRÉ CUSTOMIZADA
AWS Marketplace com imagens prontas (wordpress, por exemplo)

Lançando a minha própria imagem: Configure Instance Details: Colar comandos em 'Advanced Details' em User data
ex. 
#!/bin/bash
yum update -y
amazon-linux-extras install -y lamp-mariadb10.2-php7.2 php7.2
yum install -y httpd mariadb-server
systemctl start httpd
systemctl enable httpd
systemctl start mariadb
systemctl enable mariadb
usermod -a -G apache ec2-user
chown -R ec2-user:apache /var/www


Quer que o servidor seja acessado por todos? Crie um novo security group, adicione-o à máquina e coloque a porta 80 lá (vai dar para abrir com o PUBLIC IP da máquina no navegador)

GERANDO IMAGENS DENTRO DA EC2
Para gerar uma imagem, pare a instância primeiro
action>image>create image

Onde ver a imagem? Images>AMIs
A imagem que vc fez, além de estar na EC2, fica disponível quando vc vai criar uma nova máquina virtual (my AMIs)

(quando vc cria uma imagem, o endereço aparece como root, na hora de conectar, use ec2-user)

Como atribuir um IP fixo para a máquina:
Dashboard>ec2>elastic IP addresses
Quando vc aloca um endereço de IP, vc ainda precisa vinculá-lo a uma máquina em actions>associate Elastic IP address 

Se a máquina estiver no ar, você só pode ter um IP estático associado a ela.

Se a máquina estiver parada, vc passa a ser tarifado pelo Ip estático.
ENTENDER PRECIFICAÇÃO DA AWS É IMPORTANTE

AMAZON RDS (Amazon Relational Database Service)

Necessário segmentar a aplicação do Banco de dados na máquina virtual - Amazon RDS (prepara uma máquina já rodando o MySQL)

-Vc pode programar o Amazon RDS a fazer backups automáticos e tirar uma foto disso

CRIAR TUDO NA MESMA REGIÃO E COM O MESMO SECURITY GROUP, PARA QUE TENHAM A MESMA VPC (VIRTUAL PRIVATE CLOUD - se vc fizer em outra região, vai ter que fazer ajustes para as VPCs se comunicarem)

Quando há muitas máquinas, vc precisa de um template para multiplicar essas máquinas iguais

EBS (elastic block store: onde ficam os volumes e imagens)

LOAD BALANCING
Tráfego de instâncias (quando temos muitas VMs, TODAS todas elas apontam para o mesmo RDS, os usuários acessam SEMPRE PELA PORTA 80/443 (se for HTTP e HTTPS) e o devops para a porta 22. Caso uma instância caia, ela é substituída por outra
-crie http, internet facing
-Availability zones para as subnets: USE SEMPRE AS MESMAS (pelo menos 2)

AUTO SCALING
Primeiro vc configura (Launch Configurations) e dps vc cria (Auto Scaling groups)
Security groups: preciso gerenciar a máquina (acesso-remoto, precisa ser acessível pela web (acesso-web) e precisa ser acessível na VPC.
Ao criar o Auto Scaling Group, atenção com as subnets! Usar as mesmas das Avalilability zones!

Pronto, agora vc pode acessar usando o endereço que está em LOAD BALANCERS > DNS NAME

No grupo de auto scaling, ele olha o estado da EC2 (se está parada ou finalizada e se a aplicação está respondendo. A partir disso, ele tenta corrigir os erros automaticamente).

SCALING POLICY: Dá para setar isso: quando as instancias EC2 existentes ficarem ocupadas, ele cria mais uma.
**Tem que mudar a política e editar o máximo da quantidade de máquinas desejadas no auto scaling group

AWS CLI: acessa as EC2 não mais pelo site, mas pela linha de comando

sudo yum update (atualiza os pacotes)
ping <ip da outra máquina> //verifica a comunicação das máquinas
netstat -ltun (verifica se o Apache está rodando, caso tenha instalado na máquina)
cd /var (vai para a pasta var)
ls -l (verifica o que vc tem na pasta)
mysql -u admin -h <endereço do endpoint da database> -p (conecta no mysql com o usuário admin e o host nesse endereço, vai pedir senha)
-----
COMANDOS DB
show databases; (mostra base de dados na base de dados)
create database cadastro; (cria nova db com esse nome)
exit - sai do mysql
------
netstat -ltun (lista quais são as formas de comunicação com a máquina)
sudo systemctl stop mariadb (para o banco de dados)
sudo systemctl disable mariadb (desabilita ele)
cd /var/www
ls
mkdir <nome da pasta>
cd <nome da pasta>
vi dbinfo.cadastro (criar isso dentro da pasta dela, cadastro por exemplo)
i
---inserir estas informações
<?php

define('DB_SERVER', '<endpoint da Amazon RDS>');
define('DB_USERNAME', 'admin');
define('DB_PASSWORD', 'blablapassword');
define('DB_DATABASE', 'cadastro');

?>

:x -ou :wq
ls -l
dentro da pasta html
vi index.php (dentro da vi, copia e cola o projeto)
cd ..
cd ..
(na pasta var)
chown -R ec2-user:apache www/
cd www/html/
ls -l
sudo shutdown -h now (desliga a máquina virtual - para que vc possa recriar essa imagem e multiplicar as vms com essa imagem)

dig <dominio que vc quer>

USANDO AWS PELA LINHA DE COMANDO (AWS CLI)
aws configure

(na dashboard da aws)
iam>user>add user

(de volta no terminal)
digitar a key user
digitar secret key
aws ec2 describe (mostra as instâncias)
aws ec2 describe-instances --query "Reservations[*].Instances[*].{Instance:[InstanceId,State]}" (mostra as infos específicas de cada instância)
aws ec2 describe-instances --instance-id <id da instancia> (mostra as infos de uma instância só)
aws ec2 describe-instances --instance-id <id da instancia> | grep GroupName
aws ec2 start-instances --instance-ids <id da instancia> (liga uma instância)
aws ec2 stop-instances --instance-ids <id da instancia> (desliga uma instancia)




